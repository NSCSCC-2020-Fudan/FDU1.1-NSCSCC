#include <asm.h>
#include <regdef.h>
#include <inst_test.h>

LEAF(n4_beq_test)
    .set noreorder
    addiu s0, s0 ,1
    li  s2, 0x0
###test inst
    TEST_BEQ(0x52919078, 0x81468400, 0x0fb16a80, 0xdf225ddc, 0x00000000, 0x00000000)
    TEST_BEQ(0x90db14d8, 0xa81a7400, 0x2fdac790, 0xe4a202d3, 0x00000000, 0x00000000)
    TEST_BEQ(0xbca1eea8, 0xa4ac24ae, 0xc64ac344, 0xc38ed9a0, 0x00000000, 0x00000000)
    TEST_BEQ(0xc7820fa8, 0x71f9dbb0, 0x523b85b0, 0xcb7dbd40, 0x00000000, 0x00000000)
    TEST_BEQ(0x65a8a904, 0x042a7ac0, 0x2308a218, 0x602bdf60, 0x00000000, 0x00000000)
    TEST_BEQ(0x7d5d9210, 0x44f63240, 0x55a9ccbe, 0x80212b6f, 0x00000000, 0x00000000)
    TEST_BEQ(0x0c81c340, 0x6ef54770, 0xc8b25370, 0xe76ee2aa, 0x00000000, 0x00000000)
    TEST_BEQ(0xf14588c0, 0x433941dc, 0x15110ec0, 0xf5606dc1, 0x00000000, 0x00000000)
    TEST_BEQ(0x12c43800, 0xf82f4330, 0x56c2e54e, 0xe0bc64db, 0x00000000, 0x00000000)
    TEST_BEQ(0xd8e1092e, 0xd2b6e680, 0xdd2d5c00, 0x9b71fc28, 0x00000000, 0x00000000)
    TEST_BEQ(0x944c8160, 0x648eb888, 0xed035fd4, 0x0bb4d92c, 0x00000000, 0x00000000)
    TEST_BEQ(0x9408741c, 0x1da1d060, 0xad3a0385, 0xc6b59c6e, 0x00000000, 0x00000000)
    TEST_BEQ(0xb21e14d1, 0xc8b4db80, 0xb8f00578, 0x7c9cbe18, 0x00000000, 0x00000000)
    TEST_BEQ(0x1c0dff06, 0x6e6252c0, 0x928e58b7, 0x66728f80, 0x00000000, 0x00000000)
    TEST_BEQ(0x1d25b274, 0xfc4f66c6, 0x93368d10, 0xd01e595a, 0x00000000, 0x00000000)
    TEST_BEQ(0x7a690218, 0x240bc551, 0xcc0337a4, 0xaf62686c, 0x00000000, 0x00000000)
    TEST_BEQ(0xb3508411, 0x14e2fd6a, 0x5fcf5436, 0x9d50ad00, 0x00000000, 0x00000000)
    TEST_BEQ(0xa7d4c00c, 0x18b357e0, 0xa172ac8b, 0xf4d6b000, 0x00000000, 0x00000000)
    TEST_BEQ(0xe128d164, 0x47f13f80, 0xb0deedc2, 0x9fed1d0a, 0x00000000, 0x00000000)
    TEST_BEQ(0x9aa1ef5e, 0xedeba6a0, 0xcbea8298, 0x7b612216, 0x00000000, 0x00000000)
    TEST_BEQ(0xff0ced4c, 0x36cda884, 0xb18926d8, 0x2e211740, 0x00000000, 0x00000000)
    TEST_BEQ(0xa681b780, 0x45fdb2b0, 0xa945afee, 0xcaaf5ac0, 0x00000000, 0x00000000)
    TEST_BEQ(0x3b49dd76, 0x9ce750b8, 0x584ea574, 0xd97faf96, 0x00000000, 0x00000000)
    TEST_BEQ(0x723dc480, 0xff47ef40, 0x0815ea80, 0xb319c180, 0x00000000, 0x00000000)
    TEST_BEQ(0x86b3805d, 0x71daab98, 0x2fcb60b8, 0x59bba0e8, 0x00000000, 0x00000000)
    TEST_BEQ(0xd06393ca, 0xf600b324, 0x8ab8dd00, 0xdfde1214, 0x00000000, 0x00000000)
    TEST_BEQ(0x6ba01b98, 0x6adf234a, 0xc4dbbbdc, 0x5185b2ba, 0x00000000, 0x00000000)
    TEST_BEQ(0x15f45b20, 0x67e27312, 0x11106d3c, 0xcbab8356, 0x00000000, 0x00000000)
    TEST_BEQ(0x43d22865, 0x16c434c6, 0xacfc55ad, 0x5acde500, 0x00000000, 0x00000000)
    TEST_BEQ(0x8f921587, 0x1ad22f9b, 0xfaa1a9e0, 0xc8f9b560, 0x00000000, 0x00000000)
    TEST_BEQ(0x2ec07214, 0x75be64ec, 0xb49913a0, 0x08c3fcf6, 0x00000000, 0x00000000)
    TEST_BEQ(0x620a22c4, 0xf75c26a8, 0x6656905c, 0xa6e74848, 0x00000000, 0x00000000)
    TEST_BEQ(0x62fb4a80, 0x62fb4a80, 0x166a1ae0, 0x107af4b4, 0x166a1ae0, 0x107af4b4)
    TEST_BEQ(0x56a04234, 0x56a04234, 0xb13d6c84, 0x464b2238, 0xb13d6c84, 0x464b2238)
    TEST_BEQ(0xd1c91084, 0xd1c91084, 0xe3700592, 0xa4ef050e, 0xe3700592, 0xa4ef050e)
    TEST_BEQ(0x94223f24, 0x94223f24, 0xe77f3df0, 0x9285f1b4, 0xe77f3df0, 0x9285f1b4)
    TEST_BEQ(0x13b85cc0, 0x13b85cc0, 0x0c089630, 0x721a3810, 0x0c089630, 0x721a3810)
    TEST_BEQ(0xc41dbf64, 0xc41dbf64, 0xa537e80b, 0x53d5947e, 0xa537e80b, 0x53d5947e)
    TEST_BEQ(0x60af6080, 0x60af6080, 0x5b330ae5, 0x2d2576be, 0x5b330ae5, 0x2d2576be)
    TEST_BEQ(0x8541cd00, 0x8541cd00, 0x3c52c34c, 0x621695c7, 0x3c52c34c, 0x621695c7)
    TEST_BEQ(0x097f2a98, 0x097f2a98, 0x1fce9240, 0x8a958480, 0x1fce9240, 0x8a958480)
    TEST_BEQ(0x98325f68, 0x98325f68, 0x8bcefd8a, 0x85c3e632, 0x8bcefd8a, 0x85c3e632)
    TEST_BEQ(0x9a996134, 0x9a996134, 0x8294e540, 0x78b041e0, 0x8294e540, 0x78b041e0)
    TEST_BEQ(0xefb0dd7c, 0xefb0dd7c, 0xa3c96acc, 0x07916ea6, 0xa3c96acc, 0x07916ea6)
    TEST_BEQ(0xa877ea18, 0xa877ea18, 0x0192dd01, 0x4aaaada0, 0x0192dd01, 0x4aaaada0)
    TEST_BEQ(0x235b4c11, 0x235b4c11, 0x6d529950, 0x22370e98, 0x6d529950, 0x22370e98)
    TEST_BEQ(0xfb177658, 0xfb177658, 0x1ae45760, 0x4a9e5ace, 0x1ae45760, 0x4a9e5ace)
    TEST_BEQ(0x8fd70840, 0x8fd70840, 0x15f0a7a0, 0xaeaeccec, 0x15f0a7a0, 0xaeaeccec)
    TEST_BEQ(0xdf9a8a5a, 0xdf9a8a5a, 0xf176807e, 0x5ae91f7c, 0xf176807e, 0x5ae91f7c)
    TEST_BEQ(0xcdc6657c, 0xcdc6657c, 0xcc169869, 0x9c72bd96, 0xcc169869, 0x9c72bd96)
    TEST_BEQ(0xf16f8ac4, 0xf16f8ac4, 0x7d005284, 0xd1e9500c, 0x7d005284, 0xd1e9500c)
    TEST_BEQ(0x24c37e78, 0x24c37e78, 0x4cfa0eda, 0x34c27390, 0x4cfa0eda, 0x34c27390)
    TEST_BEQ(0xab37fdec, 0xab37fdec, 0x450e7c0c, 0x639d0ef8, 0x450e7c0c, 0x639d0ef8)
    TEST_BEQ(0x235843c0, 0x235843c0, 0x5b269f78, 0xc0952a80, 0x5b269f78, 0xc0952a80)
    TEST_BEQ(0x1ff5d45e, 0x1ff5d45e, 0x4740bb7e, 0x9ea80c50, 0x4740bb7e, 0x9ea80c50)
    TEST_BEQ(0xefe103c0, 0xefe103c0, 0x9d6066bc, 0xb59055d0, 0x9d6066bc, 0xb59055d0)
    TEST_BEQ(0x3e7f4ab4, 0x3e7f4ab4, 0x8e0d0eaa, 0xa926fe80, 0x8e0d0eaa, 0xa926fe80)
    TEST_BEQ(0x09c6dada, 0x09c6dada, 0xeaf51224, 0x987934bc, 0xeaf51224, 0x987934bc)
    TEST_BEQ(0x4579a63c, 0x4579a63c, 0xc4d7fd40, 0xceab5484, 0xc4d7fd40, 0xceab5484)
    TEST_BEQ(0xebdf3bec, 0xebdf3bec, 0xdea63aa0, 0xeffcc28e, 0xdea63aa0, 0xeffcc28e)
    TEST_BEQ(0xdf35158c, 0xdf35158c, 0x8de32077, 0xd4964a7c, 0x8de32077, 0xd4964a7c)
    TEST_BEQ(0xb6f0e000, 0xb6f0e000, 0x20be1150, 0xc81d159a, 0x20be1150, 0xc81d159a)
    TEST_BEQ(0x07224e40, 0x07224e40, 0x482d3718, 0x3d9f76b6, 0x482d3718, 0x3d9f76b6)
    TEST_BEQ(0x25b13638, 0x25b13638, 0x6aa52133, 0x293b5e00, 0x6aa52133, 0x293b5e00)
    TEST_BEQ(0xee911ecc, 0xee911ecc, 0xd050e9a8, 0x5fb2f72c, 0xd050e9a8, 0x5fb2f72c)
    TEST_BEQ(0x6e706f04, 0x6e706f04, 0x2f631c8d, 0x90012e06, 0x2f631c8d, 0x90012e06)
    TEST_BEQ(0x7160c398, 0x7160c398, 0x904e9db5, 0x0cb34796, 0x904e9db5, 0x0cb34796)
    TEST_BEQ(0x38f4a350, 0x38f4a350, 0x4521213e, 0x3f022f08, 0x4521213e, 0x3f022f08)
    TEST_BEQ(0xa3548fd4, 0xa3548fd4, 0x54aa10c8, 0x9c18f200, 0x54aa10c8, 0x9c18f200)
    TEST_BEQ(0x1b5116e0, 0x1b5116e0, 0x3b0e7d7e, 0x0bec6118, 0x3b0e7d7e, 0x0bec6118)
    TEST_BEQ(0x1f74adfa, 0x1f74adfa, 0x3ef427d0, 0xedf02a14, 0x3ef427d0, 0xedf02a14)
    TEST_BEQ(0x00c882e4, 0x00c882e4, 0x8a955513, 0xcbda2e00, 0x8a955513, 0xcbda2e00)
    TEST_BEQ(0xbf926b10, 0xbf926b10, 0xced18270, 0x83595811, 0xced18270, 0x83595811)
    TEST_BEQ(0xa8ea67cc, 0xa8ea67cc, 0xace02efb, 0x6babfe90, 0xace02efb, 0x6babfe90)
    TEST_BEQ(0x9a25b4c6, 0x9a25b4c6, 0x3b52d521, 0xcbcbe300, 0x3b52d521, 0xcbcbe300)
    TEST_BEQ(0xfef34fc4, 0xfef34fc4, 0x7dcc6298, 0x09acf4fc, 0x7dcc6298, 0x09acf4fc)
    TEST_BEQ(0x3e99f9c8, 0x3e99f9c8, 0x92351c70, 0x4917958a, 0x92351c70, 0x4917958a)
    TEST_BEQ(0x1e0f61e0, 0x1e0f61e0, 0x7bcdc380, 0x9156d8d7, 0x7bcdc380, 0x9156d8d7)
    TEST_BEQ(0x00127980, 0x00127980, 0x2c701eae, 0xcdbc6e70, 0x2c701eae, 0xcdbc6e70)
    TEST_BEQ(0xb4739f26, 0xb4739f26, 0x14b14ed4, 0x35b68b96, 0x14b14ed4, 0x35b68b96)
    TEST_BEQ(0x37a00820, 0x00000000, 0xa03a8bd0, 0x69dccece, 0x00000000, 0x00000000)
    TEST_BEQ(0x3f49796f, 0x00000000, 0x0f300740, 0x12275e6a, 0x00000000, 0x00000000)
    TEST_BEQ(0x1050538b, 0x00000000, 0x7a0a5b00, 0x3dce9b53, 0x00000000, 0x00000000)
    TEST_BEQ(0x320cf6dc, 0x00000000, 0x757d3370, 0x4983b1b8, 0x00000000, 0x00000000)
    TEST_BEQ(0x40a1777d, 0x00000000, 0xdc91c1f0, 0xe8c29c44, 0x00000000, 0x00000000)
    TEST_BEQ(0x277ac544, 0x00000000, 0xebe41d10, 0xe7e505f4, 0x00000000, 0x00000000)
    TEST_BEQ(0x8a2ed35f, 0x00000000, 0xdd5f100e, 0xe7ee5fac, 0x00000000, 0x00000000)
    TEST_BEQ(0xeab00131, 0x00000000, 0xe471c800, 0xffa694b0, 0x00000000, 0x00000000)
    TEST_BEQ(0xe9c64428, 0x00000000, 0x05cc9c60, 0x04315e3f, 0x00000000, 0x00000000)
    TEST_BEQ(0xdeebed02, 0x00000000, 0xe1182ccd, 0xe0612000, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0x9dc783d0, 0x2ba57cc0, 0x561f7a9e, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0x4ea9b8f0, 0x800e3eb3, 0xce526bca, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0xeb3d913c, 0x44178c58, 0x3d32f566, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0x475d8174, 0xd080caec, 0xe403cd80, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0xa99f65c8, 0xae02467e, 0x2cf043ad, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0x4e5075e0, 0x106ff218, 0x2f2b4420, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0xb9dd7362, 0x20b8c990, 0xbe2d484c, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0xa148d73e, 0x3cc0f346, 0xac6c1dc0, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0x9185cdc0, 0x9478c240, 0xc72b9d10, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0x10640e9a, 0xa172f0f0, 0x4b8349b8, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0x77c77558, 0xdf7c77fa, 0x64527238, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0x24922d7c, 0xd2894566, 0x07830114, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0x6b926783, 0xdbc3f268, 0x0a44caf8, 0x00000000, 0x00000000)
    TEST_BEQ(0x00000000, 0x00000000, 0xfc98d552, 0xca9087ec, 0xfc98d552, 0xca9087ec)
###detect exception
    bne s2, zero, inst_error
    nop
###score ++
    addiu s3, s3, 1
###output (s0<<24)|s3
inst_error:  
    sll t1, s0, 24
    or t0, t1, s3 
    sw t0, 0(s1)
    jr ra
    nop
END(n4_beq_test)
